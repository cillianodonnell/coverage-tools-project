;
; RTEMS Supercore Thread Trace Configurations
;
[rtems-score-thread-all]
trace = _Thread_Handler_initialization, _Thread_Create_idle, _Thread_Start_multitasking
trace = _Thread_Stack_Allocate, _Thread_Stack_Free, _Thread_Initialize, _Thread_Start
trace = _Thread_Restart, _Thread_Yield, _Thread_Set_life_protection
trace = _Thread_Life_action_handler, _Thread_Kill_zombies, _Thread_Close
trace = _Thread_Ready, _Thread_Clear_state, _Thread_Set_state, _Thread_Load_environment
trace = _Thread_Handler, _Thread_Delay_ended, _Thread_Change_priority, _Thread_Set_priority
trace = _Thread_Get, _Thread_blocking_operation_Cancel, _Thread_blocking_operation_Finalize

[rtems-score-thread-create-destory]
traces = rtems-score-thread-create, rtems-score-thread-destroy

[rtems-score-thread-create]
trace = _Thread_Handler_initialization, _Thread_Create_idle
trace = _Thread_Stack_Allocate, _Thread_Initialize, _Thread_Start
trace = _Thread_Restart, _Thread_Handler

[rtems-score-thread-destroy]
trace = _Thread_Kill_zombies, _Thread_Close
trace = , _Thread_blocking_operation_Cancel, _Thread_blocking_operation_Finalize

[rtems-score-thread-activity]
trace = _Thread_Restart, _Thread_Yield, _Thread_Set_life_protection
trace = _Thread_Life_action_handler, _Thread_Ready, _Thread_Clear_state,
trace =  _Thread_Set_state, _Thread_Load_environment, _Thread_Delay_ended
trace = _Thread_Change_priority, _Thread_Set_priority, _Thread_Get

[rtems-score-thread-signatures]
_Thread_Handler_initialization = void, void
_Thread_Create_idle = void, void
_Thread_Start_multitasking = void, void
_Thread_Stack_Allocate = size_t, Thread_Control*, size_t
_Thread_Stack_Free = void, Thread_Control*
_Thread_Initialize = bool, Objects_Information *, Thread_Control*, const struct Scheduler_Control*, void*, size_t, bool, Priority_Control, bool, Thread_CPU_budget_algorithms, Thread_CPU_budget_algorithm_callout, uint32_t, Objects_Name
_Thread_Start = bool, Thread_Control*, Thread_Start_types, void*, void*, Thread_Entry_numeric_type, Per_CPU_Control*
_Thread_Restart = bool, Thread_Control*, Thread_Control*, void*, Thread_Entry_numeric_type
_Thread_Yield = void, Thread_Control*
_Thread_Set_life_protection = bool, bool
_Thread_Life_action_handler = void, Thread_Control*, Thread_Action*, Per_CPU_Control*, ISR_Level
_Thread_Kill_zombies = void, void
_Thread_Close = void, Thread_Control*, Thread_Control*
_Thread_Ready = void, Thread_Control*
_Thread_Clear_state = void, Thread_Control*, States_Control
_Thread_Set_state = void, Thread_Control*, States_Control
_Thread_Load_environment = void, Thread_Control*
_Thread_Handler = void, void
_Thread_Delay_ended = void, Objects_Id, void*
_Thread_Change_priority = void, Thread_Control*, Priority_Control, bool
_Thread_Set_priority = void, Thread_Control*, Priority_Control
_Thread_Get = Thread_Control*, Objects_Id, Objects_Locations*
_Thread_blocking_operation_Cancel = void, Thread_blocking_operation_States, Thread_Control*, ISR_Level
_Thread_blocking_operation_Finalize = void, Thread_Control*, ISR_Level

